{"version":3,"sources":["assets/logo/logo.png","assets/icons/instagram.svg","assets/cards/apparel.jpg","assets/cards/banners.jpg","assets/cards/business_cards.jpg","assets/cards/large_format_printing.jpg","assets/cards/luminous_signs.jpg","assets/cards/promotional_products.jpg","assets/cards/vehicle_wraps.jpg","assets/cards/windows_and_walls_graphics.jpg","components/lang-selector/index.tsx","components/navbar/index.tsx","assets/index.tsx","App.tsx","components/card/index.tsx","components/footer/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LangSelector","props","useState","state","activeIndex","setActiveIndex","dispatch","useContext","LanguageSetStore","className","options","map","lang","i","onClick","action","handleClick","key","reduce","prev","curr","Navbar","LanguageStore","src","logo","alt","href","id","CardAssets","apparel","banners","business_cards","large_format_printing","luminous_signs","promotional_products","windows_and_walls_graphics","vehicle_wraps","cards","require","React","createContext","languageReducer","type","App","useReducer","Provider","value","card","link","image","String","description","image_alt","descriptionESP","target","rel","instagram","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.22235b06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49770967.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.04f1d872.svg\";","module.exports = __webpack_public_path__ + \"static/media/apparel.f2b01daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banners.ceeb35bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/business_cards.c08b19a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/large_format_printing.f891d9bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/luminous_signs.4de5adfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/promotional_products.34756ec1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vehicle_wraps.d1fd1671.jpg\";","module.exports = __webpack_public_path__ + \"static/media/windows_and_walls_graphics.589c9ac5.jpg\";","import React, { useState, useContext } from 'react';\nimport './index.scss';\nimport { LanguageSetStore } from '../../App';\n\ninterface LangSelectorProp {\n  options: String[];\n}\n\nexport default function LangSelector(props: LangSelectorProp) {\n  const [state, setState] = useState(props);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const dispatch = useContext(LanguageSetStore);\n  \n  function handleClick(i: number, lang: String) {\n    // @ts-ignore\n    dispatch({action: 'update', lang: lang});\n    setActiveIndex(i);\n  }\n  return (\n    <div className=\"lang-selector\">\n    {state.options.map<React.ReactNode>((lang, i) => {\n      return <span className={`lang-item ${activeIndex === i?\"selected\":\"\"}`} onClick={() => handleClick(i, lang)} key={i}>{lang}</span>\n    }).reduce((prev, curr) => [prev, '|', curr])}\n    </div>\n  );\n\n};\n","import React, { useContext } from 'react';\nimport './index.scss';\nimport LangSelector from '../lang-selector';\nimport { LanguageStore } from '../../App'\nimport logo from '../../assets/logo/logo.png'\n\nfunction Navbar() {\n  \n  const lang = useContext(LanguageStore);\n  return (\n    <div className=\"navbar\">\n      <nav className=\"navbar container\">\n        <div className=\"left\">\n          <img src={logo} alt=\"lumen graphics logo\"/>\n        </div>\n        <div className=\"right\">\n          <div className=\"contact-language\">\n            <a href=\"contact\">\n              <p>{lang === \"ENG\" ? \"Contact\" : \"Contacto\"}</p>\n            </a>\n            {LangSelector({\n              options: [\"ENG\", \"ESP\"]\n            })}\n          </div>\n          <p id=\"tagline\">{lang === \"ENG\" ? \"Business printing and marketing solutions\" : \"Impresi√≥n comercial y soluciones de marketing\"}</p>\n        </div>\n      </nav>\n    </div>\n  );\n\n};\n\nexport default Navbar;\n\n","import apparel from './cards/apparel.jpg';\nimport banners from './cards/banners.jpg';\nimport business_cards from './cards/business_cards.jpg';\nimport large_format_printing from './cards/large_format_printing.jpg';\nimport luminous_signs from './cards/luminous_signs.jpg';\nimport promotional_products from './cards/promotional_products.jpg';\nimport vehicle_wraps from './cards/vehicle_wraps.jpg';\nimport windows_and_walls_graphics from './cards/windows_and_walls_graphics.jpg';\n\nconst CardAssets:{ [card_name: string] : string; } = {\n  \"Apparel\": apparel,\n  \"Banners\": banners,\n  \"Business Cards\": business_cards,\n  \"Large Format Printing\": large_format_printing,\n  \"Luminous Signs\": luminous_signs,\n  \"Promotional Products\": promotional_products,\n  \"Windows & Walls Graphics\": windows_and_walls_graphics,\n  \"Vehicle Wraps\": vehicle_wraps,\n};\n\nexport { CardAssets };","import React, { useReducer } from 'react';\nimport './App.scss';\n\nimport Navbar from './components/navbar';\nimport Footer from './components/footer';\nimport Card from './components/card';\n\nimport {CardAssets} from './assets';\n\ninterface CardData {\n  link: string;\n  description: string;\n  descriptionESP: string;\n}\n\nconst cards: CardData[] = require('./assets/cards.json');\n\nconst LanguageSetStore = React.createContext({});\nconst LanguageStore = React.createContext({});\n\nfunction languageReducer(\n  state: {lang: string}, \n  action: {type: string, lang: string}\n) {\n  switch (action.type) {\n    case 'update':\n      return {lang: action.lang};\n    default:\n      return {lang: action.lang}\n  }\n}\n\nexport default function App() {\n  let [state, dispatch] = useReducer(languageReducer, {lang: 'ENG'});\n  \n  return (\n    <div className=\"home\">\n      <LanguageStore.Provider value={state.lang}>\n        <LanguageSetStore.Provider value={dispatch}>\n          <Navbar />\n        </LanguageSetStore.Provider>\n        <div className=\"cards\">\n          {cards.map((card, i) => {\n              return (\n                Card({\n                  key: i,\n                  link: card.link,\n                  image: String(CardAssets[card.description]),\n                  image_alt: card.description,\n                  description: state.lang === \"ENG\" ? card.description : card.descriptionESP,\n                })\n              )\n          })}\n        </div>\n        {Footer()}\n      </LanguageStore.Provider>\n    </div>\n  );\n}\n\nexport {LanguageSetStore, LanguageStore, App};\n","import React from 'react';\nimport './index.scss';\n\ninterface CardProp {\n  key?: number;\n  link: string;\n  image: string;\n  image_alt: string;\n  description: string;\n}\n\nexport default function Card(props: CardProp) {\n  return (\n    <a className=\"card\" href={props.link} key={props.key}>\n      <img src={props.image} alt={props.image_alt} />\n      <p>{props.description}</p>\n    </a>\n  );\n\n};\n","import React from 'react';\nimport './index.scss';\nimport instagram from '../../assets/icons/instagram.svg';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <footer className=\"footer-content\">\n        <p className=\"phone\">+1 (940) 293-7891</p>\n        <a className=\"email\" href=\"mailto:lumengraphicsdallas@gmail.com\">\n          <p>lumengraphicsdallas@gmail.com</p>\n        </a>\n        <p className=\"address\">2572 Walnut Hill Lane 100, Dallas, TX, 75229</p>\n        <a className=\"insta\" href=\"https://instagram.com/lumengraphicsdallas\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={instagram} alt=\"instagram logo\" />\n        </a>\n      </footer>\n    </div>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}